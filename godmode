#!/bin/bash

# godmode - A short command to access God Mode functions
# This script is a convenience wrapper around god_mode_remote.sh

# Get the directory of this script
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Define color codes
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Check if the command is specified
if [ "$1" == "continue" ] || [ "$1" == "c" ]; then
    # Run the continue conversation script directly
    python3 "$SCRIPT_DIR/god_mode/scripts/script_continue_conversation.py" "${@:2}"
    exit $?
elif [ "$1" == "route" ] || [ "$1" == "r" ]; then
    # Route clipboard content
    "$SCRIPT_DIR/god_mode/scripts/route" --clipboard
    exit $?
elif [ "$1" == "enhance" ] || [ "$1" == "e" ]; then
    # Enhance prompt
    if [ -n "$2" ]; then
        python3 "$SCRIPT_DIR/god_mode/scripts/script_enhance_prompt.py" --prompt "$2" --copy
    else
        python3 "$SCRIPT_DIR/god_mode/scripts/script_enhance_prompt.py" --clipboard --copy
    fi
    exit $?
elif [ "$1" == "tag" ] || [ "$1" == "t" ]; then
    # TAG compliance
    if [ "$2" == "report" ]; then
        python3 "$SCRIPT_DIR/god_mode/scripts/script_tag_feedback.py" --report
    elif [ "$2" == "validate" ] && [ -n "$3" ]; then
        python3 "$SCRIPT_DIR/god_mode/scripts/script_tag_feedback.py" --validate "$3"
    else
        echo "Usage: godmode tag [report|validate <file>]"
    fi
    exit $?
elif [ "$1" == "notifications" ] || [ "$1" == "n" ]; then
    # Notification settings
    notification_script="$SCRIPT_DIR/god_mode/scripts/script_notification_settings.py"
    if [ -f "$notification_script" ]; then
        # Make it executable
        chmod +x "$notification_script"
        
        # Parse subcommand
        if [ "$2" == "on" ]; then
            python3 "$notification_script" --enable-all
        elif [ "$2" == "off" ]; then
            python3 "$notification_script" --disable-all
        elif [ "$2" == "sound" ]; then
            python3 "$notification_script" --toggle-sound
        elif [ "$2" == "desktop" ]; then
            python3 "$notification_script" --toggle-notifications
        elif [ "$2" == "test" ]; then
            python3 "$notification_script" --test
        else
            # Default to list
            python3 "$notification_script" --list
            echo -e "\nUsage: godmode notifications [on|off|sound|desktop|test]"
        fi
    else
        echo "Error: Notification settings script not found"
        echo "Expected location: $notification_script"
        exit 1
    fi
    exit $?
elif [ "$1" == "customize" ]; then
    # Customize the command name
    if [ -z "$2" ]; then
        echo "Usage: godmode customize <new_command_name>"
        echo "Example: godmode customize zeus"
        exit 1
    fi
    
    # Get the new command name
    NEW_NAME="$2"
    
    # Check if the name is valid
    if [[ ! $NEW_NAME =~ ^[a-zA-Z0-9_-]+$ ]]; then
        echo "Error: Command name can only contain letters, numbers, underscores, and hyphens"
        exit 1
    fi
    
    # Create a copy of this script with the new name
    TARGET_FILE="$SCRIPT_DIR/$NEW_NAME"
    
    if [ -f "$TARGET_FILE" ]; then
        echo "Error: A file with the name '$NEW_NAME' already exists"
        exit 1
    fi
    
    # Copy this script to the new file
    cp "$SCRIPT_DIR/god" "$TARGET_FILE"
    
    # Make it executable
    chmod +x "$TARGET_FILE"
    
    echo -e "${GREEN}Created custom command: ${CYAN}$NEW_NAME${NC}"
    echo -e "You can now use ${CYAN}$NEW_NAME${NC} as an alternative to ${CYAN}godmode${NC}"
    echo
    echo -e "To install it system-wide, run:"
    echo -e "${YELLOW}$SCRIPT_DIR/install_shortcut.sh${NC}"
    echo -e "And select your new command when prompted."
    
    exit 0
elif [ "$1" == "help" ] || [ "$1" == "h" ] || [ "$1" == "--help" ]; then
    echo -e "${CYAN}God Mode Quick Command${NC}"
    echo -e "Usage: godmode [command] [options]"
    echo
    echo -e "${YELLOW}Available commands:${NC}"
    echo -e "  ${CYAN}continue, c${NC} [--custom \"question\"]  - Continue conversation with AI"
    echo -e "  ${CYAN}route, r${NC}                          - Route clipboard content to memory files"
    echo -e "  ${CYAN}enhance, e${NC} [\"prompt\"]             - Enhance a prompt with context"
    echo -e "  ${CYAN}tag, t${NC} [report|validate <file>]   - Work with TAG compliance"
    echo -e "  ${CYAN}notifications, n${NC} [on|off|sound|desktop|test] - Manage notifications"
    echo -e "  ${CYAN}customize${NC} <new_name>              - Create a custom command name"
    echo -e "  ${CYAN}help, h${NC}                           - Show this help"
    echo
    echo -e "${YELLOW}Examples:${NC}"
    echo -e "  ${CYAN}godmode c${NC}                         - Continue conversation using suggestions"
    echo -e "  ${CYAN}godmode c --custom \"How does this work?\"${NC} - Ask a custom question"
    echo -e "  ${CYAN}godmode r${NC}                         - Route clipboard content to memory files"
    echo -e "  ${CYAN}godmode n on${NC}                      - Enable all notifications"
    echo -e "  ${CYAN}godmode n off${NC}                     - Disable all notifications"
    echo -e "  ${CYAN}godmode customize zeus${NC}            - Create a 'zeus' command alias"
    echo
    echo -e "If no command is specified, the God Mode menu will open."
    exit 0
fi

# If no specific command, open the main God Mode menu
"$SCRIPT_DIR/god_mode_remote.sh" "$@" 